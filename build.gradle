plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.netflix.dgs.codegen' version '7.0.3'
}

group = 'com.fastlight'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

ext {
	set('netflixDgsVersion', "10.0.1")
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.netflix.graphql.dgs:graphql-dgs-spring-graphql-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	compileOnly 'org.projectlombok:lombok:1.18.36'
	annotationProcessor 'org.projectlombok:lombok:1.18.36'
	testCompileOnly 'org.projectlombok:lombok:1.18.36'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.2.0' // Adjust to the latest version

}

dependencyManagement {
	imports {
		mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:${netflixDgsVersion}"
	}
}

generateJava {
	schemaPaths = ["${projectDir}/src/main/resources/schema"]
	packageName = 'com.fastlight.demo.codegen'
	generateClient = true
}

tasks.named('test') {
	useJUnitPlatform()
}

apply plugin: 'com.netflix.dgs.codegen'